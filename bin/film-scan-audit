#!/usr/bin/env bash

set -euo pipefail

# Get the script's directory and source film-utils.sh
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# shellcheck source=/dev/null
if ! source "${SCRIPT_DIR}/film-utils.sh"; then
    echo "Error: Could not source film-utils.sh" >&2
    exit 1
fi

# Verify functions are available
if ! declare -F is_image_file >/dev/null; then
    echo "Error: Required functions not loaded" >&2
    exit 1
fi

# Script variables
directory=""
verbose=false
total_files=0
sus_files=0

show_help() {
    cat << EOF
Usage: $(basename "$0") <directory> [options]
Analyzes directories for suspicious dates in image files.

Options:
  --verbose    Show all files with their dates
  --help      Show this help message
EOF
}

process_directory() {
    local dir="$1"
    local indent="$2"
    local dir_sus_count=0
    local dir_total=0
    
    # Process all files in current directory
    while IFS= read -r -d '' file; do
        if [[ -f "$file" ]] && is_image_file "$file"; then
            ((dir_total++))
            ((total_files++))
            
            # Get creation date and ISO
            local create_date
            local iso
            create_date=$(get_exif_year "$file")
            iso=$(get_exif_iso "$file")
            
            if is_suspicious_year "$create_date"; then
                ((dir_sus_count++))
                ((sus_files++))
                echo "${indent}Found suspicious file: $(basename "$file") (Year: $create_date, ISO: $iso)"
            elif [[ "$verbose" == true ]]; then
                echo "${indent}Normal file: $(basename "$file") (Year: $create_date, ISO: $iso)"
            fi
        fi
    done < <(find "$dir" -maxdepth 1 -type f -print0)
    
    # Process subdirectories
    while IFS= read -r -d '' subdir; do
        local subdir_name
        subdir_name=$(basename "$subdir")
        echo "${indent}Analyzing directory: $subdir_name"
        process_directory "$subdir" "  $indent"
    done < <(find "$dir" -mindepth 1 -maxdepth 1 -type d -print0)
    
    # Print directory summary if files were found
    if [[ $dir_total -gt 0 ]]; then
        echo "${indent}Directory summary: $dir_sus_count/$dir_total files suspicious"
    fi
}

main() {
    # Parse arguments
    while [[ $# -gt 0 ]]; do
        case "$1" in
            --help|-h)
                show_help
                exit 0
                ;;
            --verbose)
                verbose=true
                shift
                ;;
            -*)
                echo "Error: Unknown option: $1" >&2
                show_help
                exit 1
                ;;
            *)
                if [[ -z "$directory" ]]; then
                    directory="$1"
                else
                    echo "Error: Unexpected argument: $1" >&2
                    show_help
                    exit 1
                fi
                shift
                ;;
        esac
    done
    
    # Validate arguments
    if [[ -z "$directory" ]]; then
        echo "Error: Directory not specified" >&2
        show_help
        exit 1
    fi
    
    if [[ ! -d "$directory" ]]; then
        echo "Error: Directory does not exist: $directory" >&2
        exit 1
    fi
    
    # Start processing
    echo "Starting analysis of: $directory"
    process_directory "$directory" ""
    
    # Print final summary
    echo -e "\nFinal Summary:"
    echo "Total image files found: $total_files"
    echo "Suspicious files found: $sus_files"
    if [[ $total_files -gt 0 ]]; then
        percentage=$(( (sus_files * 100) / total_files ))
        echo "Percentage suspicious: ${percentage}%"
    fi
}

# Run main if not sourced
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi